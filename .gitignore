# ============================================================================
# ToolRouter Python SDK - .gitignore
# Comprehensive ignore file for public OSS Python package
# ============================================================================

# ============================================================================
# PYTHON SPECIFIC
# ============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
test-results/
test-reports/

# Translations
*.mo
*.pot

# Django stuff (if applicable)
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff (if applicable)
instance/
.webassets-cache

# Scrapy stuff (if applicable)
.scrapy

# Sphinx documentation
docs/_build/
docs/build/
.doctrees/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ============================================================================
# IDE AND EDITOR SPECIFIC
# ============================================================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
*.swp
*.swo

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ============================================================================
# OPERATING SYSTEM SPECIFIC
# ============================================================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.directory
.Trash-*

# ============================================================================
# PACKAGE MANAGERS AND TOOLS
# ============================================================================

# npm (if using any Node.js tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Poetry
poetry.lock

# Pipenv
Pipfile.lock

# Conda
.conda/

# ============================================================================
# SECURITY AND SECRETS
# ============================================================================

# API keys and secrets
*.key
*.pem
*.p12
*.pfx
secrets.json
.secrets
config/secrets.yml
config/database.yml
.env.production
.env.staging

# Authentication files
.netrc
.authrc
auth.json

# ============================================================================
# PROJECT SPECIFIC
# ============================================================================

# ToolRouter specific config files with sensitive data
*config*.json
*credentials*.json
!test_config_sample.json
!*config*example*.json
!*config*sample*.json

# Local development files
dev-setup.py
local-*.py
scratch/
playground/
experiments/

# Documentation builds
docs/html/
docs/latex/
docs/doctrees/

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*~

# Log files
*.log
logs/

# Performance profiling
*.prof
*.pstats

# Database files
*.db
*.sqlite
*.sqlite3

# ============================================================================
# CI/CD AND DEPLOYMENT
# ============================================================================

# GitHub Actions
.github/workflows/secrets/

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
*.kubeconfig

# ============================================================================
# DEVELOPMENT AND BUILD ARTIFACTS
# ============================================================================

# Build artifacts
*.whl
*.tar.gz
*.zip
*.dmg
*.exe

# Temporary development files
TODO.md
NOTES.md
dev-notes/

# Benchmark results
benchmarks/results/
*.benchmark

# Generated files
generated/
auto-generated/

# Cache directories
.cache/
*.cache
.ruff_cache/
.black.cache/

# ============================================================================
# EDITOR BACKUPS AND TEMPORARY FILES
# ============================================================================

# Temporary files created by editors
.#*
.*.sw[a-z]
*.tmp
*~
.nfs* 